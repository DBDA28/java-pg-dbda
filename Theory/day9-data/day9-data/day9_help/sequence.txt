How to override equals method , to replace ref equality by content equality(based upon acct no)
In BankAccount class
@Override 
public booolean equals(Object o)
{
 sop("in acct equals");
 if(o instanceof BankAccount)
  return this.acctNo==((BankAccount)o).acctNo;
 return false;

}


Today's topics

1. Date Time Handling in Java 
java.time : package 

2. Wrapper classes

3. Enumeration

eg :
public enum Color
{RED,GREEN,BLUE}

What is it ? : keyword to represent set of related self typed constants.
It's a special class generated by javac that implicitly extends from ---java.lang.Enum

Access specifier of the Implicitly added  constructor : private
which are the args of the ctor : 2 , string name , int ordinal pos
1st n only statement in the ctor : super(nm,pos)

Data Members : 3 fields
public static final Color RED,GREEN,BLUE;


Important Methods : 
Inherited from Enum : public String name()
public int ordinal()
public String toString() : rets name of the enum constant
....
+ javac synthesized methods
1. public static Color[] values()
2. public static Color valueOf(String clr) throws IllegalArgumentException 

Is there any generated static init block : 
eg : 
static 
{
  //javac added code here ...
RED=new Color("RED",0);
....
}

Which methods can be overridden ? : toString
inherited version : rets name()

Which methods can not be overridden? : name(), ordinal(),equals(), compareTo() 
since they are final.

Which i/fs it implements  ? Serializable , Comparable
eg :
public enum Color
{RED,GREEN,BLUE}
In a Tester class : 
import static com.app.core.Color.*;
sop(RED.compareTo(BLUE));//what will be the answer ? -1

Can you add enum nested within a class or interface ? YES (implicitly it's treated as static member)
eg : class Vehicle
{
  ....
 private Color clr;
    enum Color
  {RED,GREEN,BLUE}
}

How to access BLUE ? Vehicle.Color.BLUE

Can you add , additional state , constructor , methods to the enum ?  yes




Objective : Showroom Management system , which will keep track of vehicles added in the showroom.

Objective : Accept vehicle details : chasisNo(string) : Unique ID, color(enum) , basePrice(double) , manufactureDate(Date),company,isAvailable

eg : Suppose vehicle's base price increases as per the chosen color

How will you implement it ?
enum Color
{RED(5000),GREEN(8000),BLUE(4500)}

Add  validation rules
4.1 No dup vehicles should be added in the showroom 
4.2 manufactureDate : must be in current  year(eg : 1st Jan 2023 onwards)
4.3 Vehicle color must be valid

0. Prompt showroom capacity
Create suitable array.

Options
1. Add Vehicle to the showroom.
Accept data --validate all i/ps --in case of success -- add vehicle , to the showroom.
o.w : throw custom exception

2. Display all vehicle details

0. Exit



Later (with Collection framework) add more options in the Showroom
3. Display all vehicles having specified color
i/p : color 
o/p : vehicle details

4. Apply discount to a particular vehicle
i/p : chasis no, discount
o/p : error mesg (via custom exc) : invalid chasis no OR success mesg(discount applied)

-------------------------Pending---------------------------
Generics

Collection Framework Overview

